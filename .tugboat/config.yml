services:
  php:
    image: tugboatqa/php:8.2.0-apache-buster
    default: true
    # Wait until the mysql service is done building
    depends: mysql
    commands:
      init:
        - ln -snf "${TUGBOAT_ROOT}/public" "${DOCROOT}"
        - apt-get update
        - apt-get install -y libzip-dev
        - pecl install zip
        - docker-php-ext-enable zip
        - a2enmod headers rewrite
        - service apache2 stop
        - service apache2 start
      build:
        - composer install
        - mv .env.tugboat .env
        - chmod -R 777 bootstrap/cache storage
        - chmod -R o+w storage
        - php artisan key:generate
        - php artisan migrate
        - php artisan config:clear
        - php artisan config:cache

  #MySQL
  mysql:
    image: tugboatqa/mysql

    # A set of commands to run while building this service
    commands:
      # Commands that import files, databases, or other assets. When an
      # existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      update:
        # Copy a database dump from an external server. The public
        # SSH key found in the Tugboat Repository configuration must be
        # copied to the external server in order to use scp.
        #- scp user@example.com:database.sql.gz /tmp/database.sql.gz
        #- zcat /tmp/database.sql.gz | mysql tugboat
        #- rm /tmp/database.sql.gz